- hosts: all
  gather_facts: true
  vars:
    ansible_become: no
    ansible_ssh_common_args: "-o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no"
    test_repo: "testing"

  tasks:
    - name: import credentials
      include_vars: vars/creds.yml
      no_log: true

    - name: import repositories
      set_fact:
        nexus_repos: "{{ lookup('file','vars/nexus_repos.json') | from_json }}"

    - name: Get current repositories
      uri:
        url: "http://192.168.123.180:8081/service/rest/v1/repositories"
        force_basic_auth: yes
        user: "admin"
        password: "{{ nexus_credentials }}"
        return_content: true
      register: repos

    - name: Get current blobstores
      uri:
        url: "http://192.168.123.180:8081/service/rest/v1/blobstores"
        force_basic_auth: yes
        user: "admin"
        password: "{{ nexus_credentials }}"
        return_content: true
      register: blobstores

    - name: Create missing blobstores
      uri:
        url: "http://192.168.123.180:8081/service/rest/v1/blobstores/file"
        force_basic_auth: yes
        user: "admin"
        password: "{{ nexus_credentials }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body: |
          {
            "path": "{{ item.storage.blobStoreName }}",
            "name": "{{ item.storage.blobStoreName }}"
          }
        body_format: json
      register: blob_creation_result
      loop: "{{ nexus_repos }}"
      loop_control:
        label: "{{ item.name }}"
      failed_when: blob_creation_result.status not in [200, 204]
      changed_when: blob_creation_result.status in [200, 204]
      when: "item.storage.blobStoreName not in blobstores.json | map(attribute='name') | list"

    - name: Create Nexus3 "{{ test_repo }}" Apt proxy repository
      uri:
        url: "http://192.168.123.180:8081/service/rest/v1/repositories/apt/proxy"
        force_basic_auth: yes
        user: "admin"
        password: "{{ nexus_credentials }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body: "{{ item }}"
          #{
          #  "name" : "{{ test_repo }}",
          #  "online" : true,
          #  "storage" : {
          #    "blobStoreName" : "default",
          #    "strictContentTypeValidation" : true
          #  },
          #  "cleanup" : {
          #    "policyNames" : [ "18-weeks-usage" ]
          #  },
          #  "apt" : {
          #    "distribution" : "focal",
          #    "flat" : false
          #  },
          #  "proxy" : {
          #    "remoteUrl" : "http://archive.ubuntu.com/ubuntu/",
          #    "contentMaxAge" : 1440,
          #    "metadataMaxAge" : 1440
          #  },
          #  "negativeCache" : {
          #    "enabled" : true,
          #    "timeToLive" : 1440
          #  },
          #  "httpClient" : {
          #    "blocked" : false,
          #    "autoBlock" : true,
          #    "connection" : {
          #      "retries" : null,
          #      "userAgentSuffix" : null,
          #      "timeout" : null,
          #      "enableCircularRedirects" : false,
          #      "enableCookies" : false,
          #      "useTrustStore" : false
          #    },
          #    "authentication" : null
          #  },
          #  "routingRuleName" : null,
          #  "format" : "apt",
          #  "type" : "proxy"
          #}
        body_format: json
      register: repo_creation_result
      loop: "{{ nexus_repos }}"
      loop_control:
        label: "{{ item.name }}"
      failed_when: repo_creation_result.status not in [200, 201]
      changed_when: repo_creation_result.status in [200, 201]
      when: "test_repo not in repos.json | map(attribute='name') | list"
